package com.grape.models;
// Generated Dec 9, 2016 9:59:15 AM by Hibernate Tools 3.4.0.CR1


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

/**
 * NbatableId generated by hbm2java
 */
@Entity
public class NbaTableView  implements java.io.Serializable {


     private String team;
     private String abv;
     private Integer w;
     private Integer l;
     private Double offRtg;
     private Double defRtg;
     private Double pace;
     private Integer id;

    @Column(name="id")
    @Id
    public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name="Team", length=65535)
    public String getTeam() {
        return this.team;
    }
    
    public void setTeam(String team) {
        this.team = team;
    }

    @Column(name="Abv")
    public String getAbv() {
        return this.abv;
    }
    
    public void setAbv(String abv) {
        this.abv = abv;
    }


    @Column(name="W")
    public Integer getW() {
        return this.w;
    }
    
    public void setW(Integer w) {
        this.w = w;
    }


    @Column(name="L")
    public Integer getL() {
        return this.l;
    }
    
    public void setL(Integer l) {
        this.l = l;
    }


    @Column(name="OffRtg", precision=22, scale=0)
    public Double getOffRtg() {
        return this.offRtg;
    }
    
    public void setOffRtg(Double offRtg) {
        this.offRtg = offRtg;
    }


    @Column(name="DefRtg", precision=22, scale=0)
    public Double getDefRtg() {
        return this.defRtg;
    }
    
    public void setDefRtg(Double defRtg) {
        this.defRtg = defRtg;
    }


    @Column(name="PACE", precision=22, scale=0)
    public Double getPace() {
        return this.pace;
    }
    
    public void setPace(Double pace) {
        this.pace = pace;
    }


   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof NbaTableView) ) return false;
		 NbaTableView castOther = ( NbaTableView ) other; 
         
		 return ( (this.getTeam()==castOther.getTeam()) || ( this.getTeam()!=null && castOther.getTeam()!=null && this.getTeam().equals(castOther.getTeam()) ) )
&& ( (this.getId()==castOther.getId()) || ( this.getId()!=null && castOther.getId()!=null && this.getId().equals(castOther.getId()) ) )
 && ( (this.getAbv()==castOther.getAbv()) || ( this.getAbv()!=null && castOther.getAbv()!=null && this.getAbv().equals(castOther.getAbv()) ) )
 && ( (this.getW()==castOther.getW()) || ( this.getW()!=null && castOther.getW()!=null && this.getW().equals(castOther.getW()) ) )
 && ( (this.getL()==castOther.getL()) || ( this.getL()!=null && castOther.getL()!=null && this.getL().equals(castOther.getL()) ) )
 && ( (this.getOffRtg()==castOther.getOffRtg()) || ( this.getOffRtg()!=null && castOther.getOffRtg()!=null && this.getOffRtg().equals(castOther.getOffRtg()) ) )
 && ( (this.getDefRtg()==castOther.getDefRtg()) || ( this.getDefRtg()!=null && castOther.getDefRtg()!=null && this.getDefRtg().equals(castOther.getDefRtg()) ) )
 && ( (this.getPace()==castOther.getPace()) || ( this.getPace()!=null && castOther.getPace()!=null && this.getPace().equals(castOther.getPace()) ) );
   }
   
   public int hashCode() {
         int result = 17;
         
         result = 37 * result + ( getId() == null ? 0 : this.getId().hashCode() );
         result = 37 * result + ( getTeam() == null ? 0 : this.getTeam().hashCode() );
         result = 37 * result + ( getAbv() == null ? 0 : this.getAbv().hashCode() );
         result = 37 * result + ( getW() == null ? 0 : this.getW().hashCode() );
         result = 37 * result + ( getL() == null ? 0 : this.getL().hashCode() );
         result = 37 * result + ( getOffRtg() == null ? 0 : this.getOffRtg().hashCode() );
         result = 37 * result + ( getDefRtg() == null ? 0 : this.getDefRtg().hashCode() );
         result = 37 * result + ( getPace() == null ? 0 : this.getPace().hashCode() );
         return result;
   }   


}


